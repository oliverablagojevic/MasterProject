/*
 * generated by Xtext 2.21.0
 */
grammar InternalMusicDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MusicDslGrammarAccess;

}

@parser::members {

 	private MusicDslGrammarAccess grammarAccess;

    public InternalMusicDslParser(TokenStream input, MusicDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Composition";
   	}

   	@Override
   	protected MusicDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleComposition
entryRuleComposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositionRule()); }
	iv_ruleComposition=ruleComposition
	{ $current=$iv_ruleComposition.current; }
	EOF;

// Rule Composition
ruleComposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompositionAccess().getCompositionAction_0(),
					$current);
			}
		)
		otherlv_1='Composition'
		{
			newLeafNode(otherlv_1, grammarAccess.getCompositionAccess().getCompositionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositionAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl.MusicDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getCompositionAccess().getLeftSquareBracketKeyword_3());
		}
		(
			otherlv_4='author:'
			{
				newLeafNode(otherlv_4, grammarAccess.getCompositionAccess().getAuthorKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getAuthorEStringParserRuleCall_4_1_0());
					}
					lv_author_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"author",
							lv_author_5_0,
							"org.xtext.example.mydsl.MusicDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='instrument:'
			{
				newLeafNode(otherlv_6, grammarAccess.getCompositionAccess().getInstrumentKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getInstrumentEStringParserRuleCall_5_1_0());
					}
					lv_instrument_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"instrument",
							lv_instrument_7_0,
							"org.xtext.example.mydsl.MusicDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='tonality:'
			{
				newLeafNode(otherlv_8, grammarAccess.getCompositionAccess().getTonalityKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getTonalityEStringParserRuleCall_6_1_0());
					}
					lv_tonality_9_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"tonality",
							lv_tonality_9_0,
							"org.xtext.example.mydsl.MusicDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='soundTempo:'
			{
				newLeafNode(otherlv_10, grammarAccess.getCompositionAccess().getSoundTempoKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getSoundTempoEIntParserRuleCall_7_1_0());
					}
					lv_soundTempo_11_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"soundTempo",
							lv_soundTempo_11_0,
							"org.xtext.example.mydsl.MusicDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositionAccess().getStaffStaffParserRuleCall_8_0());
				}
				lv_staff_12_0=ruleStaff
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositionRule());
					}
					add(
						$current,
						"staff",
						lv_staff_12_0,
						"org.xtext.example.mydsl.MusicDsl.Staff");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_13=','
			{
				newLeafNode(otherlv_13, grammarAccess.getCompositionAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getStaffStaffParserRuleCall_9_1_0());
					}
					lv_staff_14_0=ruleStaff
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						add(
							$current,
							"staff",
							lv_staff_14_0,
							"org.xtext.example.mydsl.MusicDsl.Staff");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_15=']'
		{
			newLeafNode(otherlv_15, grammarAccess.getCompositionAccess().getRightSquareBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleStaffElement
entryRuleStaffElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStaffElementRule()); }
	iv_ruleStaffElement=ruleStaffElement
	{ $current=$iv_ruleStaffElement.current; }
	EOF;

// Rule StaffElement
ruleStaffElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStaffElementAccess().getMeasureParserRuleCall_0());
		}
		this_Measure_0=ruleMeasure
		{
			$current = $this_Measure_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStaffElementAccess().getRestParserRuleCall_1());
		}
		this_Rest_1=ruleRest
		{
			$current = $this_Rest_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStaffElementAccess().getRepetitionParserRuleCall_2());
		}
		this_Repetition_2=ruleRepetition
		{
			$current = $this_Repetition_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStaffElementAccess().getNoteParserRuleCall_3());
		}
		this_Note_3=ruleNote
		{
			$current = $this_Note_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleStaff
entryRuleStaff returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStaffRule()); }
	iv_ruleStaff=ruleStaff
	{ $current=$iv_ruleStaff.current; }
	EOF;

// Rule Staff
ruleStaff returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStaffAccess().getStaffAction_0(),
					$current);
			}
		)
		otherlv_1='Staff'
		{
			newLeafNode(otherlv_1, grammarAccess.getStaffAccess().getStaffKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStaffAccess().getStaffNumberEIntParserRuleCall_2_0());
				}
				lv_staffNumber_2_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStaffRule());
					}
					set(
						$current,
						"staffNumber",
						lv_staffNumber_2_0,
						"org.xtext.example.mydsl.MusicDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getStaffAccess().getLeftSquareBracketKeyword_3());
		}
		otherlv_4='clef:'
		{
			newLeafNode(otherlv_4, grammarAccess.getStaffAccess().getClefKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStaffAccess().getClefClefParserRuleCall_5_0());
				}
				lv_clef_5_0=ruleClef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStaffRule());
					}
					set(
						$current,
						"clef",
						lv_clef_5_0,
						"org.xtext.example.mydsl.MusicDsl.Clef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='key:'
			{
				newLeafNode(otherlv_6, grammarAccess.getStaffAccess().getKeyKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStaffAccess().getKeyKeyParserRuleCall_6_1_0());
					}
					lv_key_7_0=ruleKey
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStaffRule());
						}
						set(
							$current,
							"key",
							lv_key_7_0,
							"org.xtext.example.mydsl.MusicDsl.Key");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='time:'
		{
			newLeafNode(otherlv_8, grammarAccess.getStaffAccess().getTimeKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStaffAccess().getTimeTimeSignatureParserRuleCall_8_0());
				}
				lv_time_9_0=ruleTimeSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStaffRule());
					}
					set(
						$current,
						"time",
						lv_time_9_0,
						"org.xtext.example.mydsl.MusicDsl.TimeSignature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStaffAccess().getElementsStaffElementParserRuleCall_9_0_0());
					}
					lv_elements_10_0=ruleStaffElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStaffRule());
						}
						add(
							$current,
							"elements",
							lv_elements_10_0,
							"org.xtext.example.mydsl.MusicDsl.StaffElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getStaffAccess().getCommaKeyword_9_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStaffAccess().getElementsStaffElementParserRuleCall_9_1_1_0());
						}
						lv_elements_12_0=ruleStaffElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStaffRule());
							}
							add(
								$current,
								"elements",
								lv_elements_12_0,
								"org.xtext.example.mydsl.MusicDsl.StaffElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_13=']'
		{
			newLeafNode(otherlv_13, grammarAccess.getStaffAccess().getRightSquareBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleClef
entryRuleClef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClefRule()); }
	iv_ruleClef=ruleClef
	{ $current=$iv_ruleClef.current; }
	EOF;

// Rule Clef
ruleClef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getClefAccess().getClefAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClefAccess().getTypeClefTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleClefType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClefRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl.MusicDsl.ClefType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTimeSignature
entryRuleTimeSignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeSignatureRule()); }
	iv_ruleTimeSignature=ruleTimeSignature
	{ $current=$iv_ruleTimeSignature.current; }
	EOF;

// Rule TimeSignature
ruleTimeSignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='beat'
		{
			newLeafNode(otherlv_0, grammarAccess.getTimeSignatureAccess().getBeatKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeSignatureAccess().getBeatEIntParserRuleCall_1_0());
				}
				lv_beat_1_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeSignatureRule());
					}
					set(
						$current,
						"beat",
						lv_beat_1_0,
						"org.xtext.example.mydsl.MusicDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getTimeSignatureAccess().getCommaKeyword_2());
		}
		otherlv_3='beatType'
		{
			newLeafNode(otherlv_3, grammarAccess.getTimeSignatureAccess().getBeatTypeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeSignatureAccess().getBeatTypeEIntParserRuleCall_4_0());
				}
				lv_beatType_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeSignatureRule());
					}
					set(
						$current,
						"beatType",
						lv_beatType_4_0,
						"org.xtext.example.mydsl.MusicDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleKey
entryRuleKey returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyRule()); }
	iv_ruleKey=ruleKey
	{ $current=$iv_ruleKey.current; }
	EOF;

// Rule Key
ruleKey returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getKeyAccess().getFifthsEIntParserRuleCall_0());
			}
			lv_fifths_0_0=ruleEInt
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getKeyRule());
				}
				set(
					$current,
					"fifths",
					lv_fifths_0_0,
					"org.xtext.example.mydsl.MusicDsl.EInt");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMeasure
entryRuleMeasure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeasureRule()); }
	iv_ruleMeasure=ruleMeasure
	{ $current=$iv_ruleMeasure.current; }
	EOF;

// Rule Measure
ruleMeasure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMeasureAccess().getMeasureAction_0(),
					$current);
			}
		)
		otherlv_1='Measure'
		{
			newLeafNode(otherlv_1, grammarAccess.getMeasureAccess().getMeasureKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMeasureAccess().getMeasureNumberEIntParserRuleCall_2_0());
				}
				lv_measureNumber_2_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMeasureRule());
					}
					set(
						$current,
						"measureNumber",
						lv_measureNumber_2_0,
						"org.xtext.example.mydsl.MusicDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='begin'
		{
			newLeafNode(otherlv_3, grammarAccess.getMeasureAccess().getBeginKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMeasureAccess().getRepetitionRepetitionParserRuleCall_4_0_0());
					}
					lv_repetition_4_0=ruleRepetition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMeasureRule());
						}
						add(
							$current,
							"repetition",
							lv_repetition_4_0,
							"org.xtext.example.mydsl.MusicDsl.Repetition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getMeasureAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMeasureAccess().getRepetitionRepetitionParserRuleCall_4_1_1_0());
						}
						lv_repetition_6_0=ruleRepetition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMeasureRule());
							}
							add(
								$current,
								"repetition",
								lv_repetition_6_0,
								"org.xtext.example.mydsl.MusicDsl.Repetition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMeasureAccess().getRestRestParserRuleCall_5_0_0());
					}
					lv_rest_7_0=ruleRest
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMeasureRule());
						}
						add(
							$current,
							"rest",
							lv_rest_7_0,
							"org.xtext.example.mydsl.MusicDsl.Rest");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getMeasureAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMeasureAccess().getRestRestParserRuleCall_5_1_1_0());
						}
						lv_rest_9_0=ruleRest
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMeasureRule());
							}
							add(
								$current,
								"rest",
								lv_rest_9_0,
								"org.xtext.example.mydsl.MusicDsl.Rest");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMeasureAccess().getNoteNoteParserRuleCall_6_0_0());
					}
					lv_note_10_0=ruleNote
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMeasureRule());
						}
						add(
							$current,
							"note",
							lv_note_10_0,
							"org.xtext.example.mydsl.MusicDsl.Note");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getMeasureAccess().getCommaKeyword_6_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMeasureAccess().getNoteNoteParserRuleCall_6_1_1_0());
						}
						lv_note_12_0=ruleNote
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMeasureRule());
							}
							add(
								$current,
								"note",
								lv_note_12_0,
								"org.xtext.example.mydsl.MusicDsl.Note");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_13='end'
		{
			newLeafNode(otherlv_13, grammarAccess.getMeasureAccess().getEndKeyword_7());
		}
	)
;

// Entry rule entryRuleRest
entryRuleRest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRestRule()); }
	iv_ruleRest=ruleRest
	{ $current=$iv_ruleRest.current; }
	EOF;

// Rule Rest
ruleRest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRestAccess().getRestAction_0(),
					$current);
			}
		)
		otherlv_1='rest'
		{
			newLeafNode(otherlv_1, grammarAccess.getRestAccess().getRestKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRestAccess().getTypeRestTypeEnumRuleCall_2_0());
				}
				lv_type_2_0=ruleRestType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRestRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MusicDsl.RestType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleRepetition
entryRuleRepetition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepetitionRule()); }
	iv_ruleRepetition=ruleRepetition
	{ $current=$iv_ruleRepetition.current; }
	EOF;

// Rule Repetition
ruleRepetition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRepetitionAccess().getRepetitionAction_0(),
					$current);
			}
		)
		otherlv_1='repetition'
		{
			newLeafNode(otherlv_1, grammarAccess.getRepetitionAccess().getRepetitionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRepetitionAccess().getTypeRepetitionTypeEnumRuleCall_2_0());
				}
				lv_type_2_0=ruleRepetitionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRepetitionRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MusicDsl.RepetitionType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleNote
entryRuleNote returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNoteRule()); }
	iv_ruleNote=ruleNote
	{ $current=$iv_ruleNote.current; }
	EOF;

// Rule Note
ruleNote returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNoteAccess().getNoteAction_0(),
					$current);
			}
		)
		otherlv_1='note'
		{
			newLeafNode(otherlv_1, grammarAccess.getNoteAccess().getNoteKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNoteAccess().getNameNoteNameEnumRuleCall_2_0());
				}
				lv_name_2_0=ruleNoteName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNoteRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl.MusicDsl.NoteName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getNoteAccess().getColonKeyword_3());
		}
		(
			otherlv_4='type'
			{
				newLeafNode(otherlv_4, grammarAccess.getNoteAccess().getTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNoteAccess().getTypeNoteTypeEnumRuleCall_4_1_0());
					}
					lv_type_5_0=ruleNoteType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoteRule());
						}
						set(
							$current,
							"type",
							lv_type_5_0,
							"org.xtext.example.mydsl.MusicDsl.NoteType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='duration'
			{
				newLeafNode(otherlv_6, grammarAccess.getNoteAccess().getDurationKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNoteAccess().getDurationEIntParserRuleCall_5_1_0());
					}
					lv_duration_7_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoteRule());
						}
						set(
							$current,
							"duration",
							lv_duration_7_0,
							"org.xtext.example.mydsl.MusicDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='octave'
			{
				newLeafNode(otherlv_8, grammarAccess.getNoteAccess().getOctaveKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNoteAccess().getOctaveEIntParserRuleCall_6_1_0());
					}
					lv_octave_9_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoteRule());
						}
						set(
							$current,
							"octave",
							lv_octave_9_0,
							"org.xtext.example.mydsl.MusicDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='voice'
			{
				newLeafNode(otherlv_10, grammarAccess.getNoteAccess().getVoiceKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNoteAccess().getVoiceEIntParserRuleCall_7_1_0());
					}
					lv_voice_11_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoteRule());
						}
						set(
							$current,
							"voice",
							lv_voice_11_0,
							"org.xtext.example.mydsl.MusicDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12='dynamic'
			{
				newLeafNode(otherlv_12, grammarAccess.getNoteAccess().getDynamicKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNoteAccess().getDynamicEStringParserRuleCall_8_1_0());
					}
					lv_dynamic_13_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoteRule());
						}
						set(
							$current,
							"dynamic",
							lv_dynamic_13_0,
							"org.xtext.example.mydsl.MusicDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14='accidental'
			{
				newLeafNode(otherlv_14, grammarAccess.getNoteAccess().getAccidentalKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNoteAccess().getAccidentalAccidentalTypeEnumRuleCall_9_1_0());
					}
					lv_accidental_15_0=ruleAccidentalType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoteRule());
						}
						set(
							$current,
							"accidental",
							lv_accidental_15_0,
							"org.xtext.example.mydsl.MusicDsl.AccidentalType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_16='lyrics'
			{
				newLeafNode(otherlv_16, grammarAccess.getNoteAccess().getLyricsKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNoteAccess().getLyricsEStringParserRuleCall_10_1_0());
					}
					lv_lyrics_17_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoteRule());
						}
						set(
							$current,
							"lyrics",
							lv_lyrics_17_0,
							"org.xtext.example.mydsl.MusicDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				lv_fermata_18_0='fermata'
				{
					newLeafNode(lv_fermata_18_0, grammarAccess.getNoteAccess().getFermataFermataKeyword_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNoteRule());
					}
					setWithLastConsumed($current, "fermata", true, "fermata");
				}
			)
		)?
		(
			(
				lv_dot_19_0='dot'
				{
					newLeafNode(lv_dot_19_0, grammarAccess.getNoteAccess().getDotDotKeyword_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNoteRule());
					}
					setWithLastConsumed($current, "dot", true, "dot");
				}
			)
		)?
		(
			(
				lv_chord_20_0='chord'
				{
					newLeafNode(lv_chord_20_0, grammarAccess.getNoteAccess().getChordChordKeyword_13_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNoteRule());
					}
					setWithLastConsumed($current, "chord", true, "chord");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNoteAccess().getNotationNotationParserRuleCall_14_0_0());
					}
					lv_notation_21_0=ruleNotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoteRule());
						}
						add(
							$current,
							"notation",
							lv_notation_21_0,
							"org.xtext.example.mydsl.MusicDsl.Notation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_22=','
				{
					newLeafNode(otherlv_22, grammarAccess.getNoteAccess().getCommaKeyword_14_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNoteAccess().getNotationNotationParserRuleCall_14_1_1_0());
						}
						lv_notation_23_0=ruleNotation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNoteRule());
							}
							add(
								$current,
								"notation",
								lv_notation_23_0,
								"org.xtext.example.mydsl.MusicDsl.Notation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleNotation
entryRuleNotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotationRule()); }
	iv_ruleNotation=ruleNotation
	{ $current=$iv_ruleNotation.current; }
	EOF;

// Rule Notation
ruleNotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNotationAccess().getNotationAction_0(),
					$current);
			}
		)
		otherlv_1='notation:'
		{
			newLeafNode(otherlv_1, grammarAccess.getNotationAccess().getNotationKeyword_1());
		}
		(
			otherlv_2='articulation'
			{
				newLeafNode(otherlv_2, grammarAccess.getNotationAccess().getArticulationKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNotationAccess().getArticulationArticulationTypeEnumRuleCall_2_1_0());
					}
					lv_articulation_3_0=ruleArticulationType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotationRule());
						}
						set(
							$current,
							"articulation",
							lv_articulation_3_0,
							"org.xtext.example.mydsl.MusicDsl.ArticulationType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='ornament'
			{
				newLeafNode(otherlv_4, grammarAccess.getNotationAccess().getOrnamentKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNotationAccess().getOrnamentOrnamentTypeEnumRuleCall_3_1_0());
					}
					lv_ornament_5_0=ruleOrnamentType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotationRule());
						}
						set(
							$current,
							"ornament",
							lv_ornament_5_0,
							"org.xtext.example.mydsl.MusicDsl.OrnamentType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='slur'
			{
				newLeafNode(otherlv_6, grammarAccess.getNotationAccess().getSlurKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNotationAccess().getSlurSlurTypeEnumRuleCall_4_1_0());
					}
					lv_slur_7_0=ruleSlurType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotationRule());
						}
						set(
							$current,
							"slur",
							lv_slur_7_0,
							"org.xtext.example.mydsl.MusicDsl.SlurType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Rule ClefType
ruleClefType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='violin'
			{
				$current = grammarAccess.getClefTypeAccess().getViolinEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getClefTypeAccess().getViolinEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='bass'
			{
				$current = grammarAccess.getClefTypeAccess().getBassEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getClefTypeAccess().getBassEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule RestType
ruleRestType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='whole'
			{
				$current = grammarAccess.getRestTypeAccess().getWholeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRestTypeAccess().getWholeEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='half'
			{
				$current = grammarAccess.getRestTypeAccess().getHalfEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRestTypeAccess().getHalfEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='quarter'
			{
				$current = grammarAccess.getRestTypeAccess().getQuarterEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRestTypeAccess().getQuarterEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='eighth'
			{
				$current = grammarAccess.getRestTypeAccess().getEighthEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRestTypeAccess().getEighthEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='sixteenth'
			{
				$current = grammarAccess.getRestTypeAccess().getSixteenthEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getRestTypeAccess().getSixteenthEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='thirtysecond'
			{
				$current = grammarAccess.getRestTypeAccess().getThirtysecondEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getRestTypeAccess().getThirtysecondEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='sixtyfourth'
			{
				$current = grammarAccess.getRestTypeAccess().getSixtyfourthEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getRestTypeAccess().getSixtyfourthEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule RepetitionType
ruleRepetitionType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='left'
			{
				$current = grammarAccess.getRepetitionTypeAccess().getLeftEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRepetitionTypeAccess().getLeftEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='right'
			{
				$current = grammarAccess.getRepetitionTypeAccess().getRightEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRepetitionTypeAccess().getRightEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule NoteName
ruleNoteName returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='C'
			{
				$current = grammarAccess.getNoteNameAccess().getCEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getNoteNameAccess().getCEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='D'
			{
				$current = grammarAccess.getNoteNameAccess().getDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getNoteNameAccess().getDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='E'
			{
				$current = grammarAccess.getNoteNameAccess().getEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getNoteNameAccess().getEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='F'
			{
				$current = grammarAccess.getNoteNameAccess().getFEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getNoteNameAccess().getFEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='G'
			{
				$current = grammarAccess.getNoteNameAccess().getGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getNoteNameAccess().getGEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='A'
			{
				$current = grammarAccess.getNoteNameAccess().getAEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getNoteNameAccess().getAEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='B'
			{
				$current = grammarAccess.getNoteNameAccess().getBEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getNoteNameAccess().getBEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule NoteType
ruleNoteType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='whole'
			{
				$current = grammarAccess.getNoteTypeAccess().getWholeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getNoteTypeAccess().getWholeEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='half'
			{
				$current = grammarAccess.getNoteTypeAccess().getHalfEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getNoteTypeAccess().getHalfEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='quarter'
			{
				$current = grammarAccess.getNoteTypeAccess().getQuarterEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getNoteTypeAccess().getQuarterEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='eighth'
			{
				$current = grammarAccess.getNoteTypeAccess().getEighthEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getNoteTypeAccess().getEighthEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='sixteenth'
			{
				$current = grammarAccess.getNoteTypeAccess().getSixteenthEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getNoteTypeAccess().getSixteenthEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='thirtysecond'
			{
				$current = grammarAccess.getNoteTypeAccess().getThirtysecondEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getNoteTypeAccess().getThirtysecondEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='sixtyfourth'
			{
				$current = grammarAccess.getNoteTypeAccess().getSixtyfourthEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getNoteTypeAccess().getSixtyfourthEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule AccidentalType
ruleAccidentalType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='sharp'
			{
				$current = grammarAccess.getAccidentalTypeAccess().getSharpEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAccidentalTypeAccess().getSharpEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='flat'
			{
				$current = grammarAccess.getAccidentalTypeAccess().getFlatEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAccidentalTypeAccess().getFlatEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='natural'
			{
				$current = grammarAccess.getAccidentalTypeAccess().getNaturalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAccidentalTypeAccess().getNaturalEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule SlurType
ruleSlurType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='start'
			{
				$current = grammarAccess.getSlurTypeAccess().getStartEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSlurTypeAccess().getStartEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='stop'
			{
				$current = grammarAccess.getSlurTypeAccess().getStopEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSlurTypeAccess().getStopEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ArticulationType
ruleArticulationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='detached'
			{
				$current = grammarAccess.getArticulationTypeAccess().getDetachedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getArticulationTypeAccess().getDetachedEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='legato'
			{
				$current = grammarAccess.getArticulationTypeAccess().getLegatoEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getArticulationTypeAccess().getLegatoEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='staccato'
			{
				$current = grammarAccess.getArticulationTypeAccess().getStaccatoEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getArticulationTypeAccess().getStaccatoEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='portato'
			{
				$current = grammarAccess.getArticulationTypeAccess().getPortatoEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getArticulationTypeAccess().getPortatoEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='tenuto'
			{
				$current = grammarAccess.getArticulationTypeAccess().getTenutoEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getArticulationTypeAccess().getTenutoEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='marcato'
			{
				$current = grammarAccess.getArticulationTypeAccess().getMarcatoEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getArticulationTypeAccess().getMarcatoEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule OrnamentType
ruleOrnamentType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='slide'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getSlideEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOrnamentTypeAccess().getSlideEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='glissando'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getGlissandoEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOrnamentTypeAccess().getGlissandoEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='aciaccatura'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getAciaccaturaEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOrnamentTypeAccess().getAciaccaturaEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='appoggiatura'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getAppoggiaturaEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOrnamentTypeAccess().getAppoggiaturaEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='turn'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getTurnEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getOrnamentTypeAccess().getTurnEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='mordent'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getMordentEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getOrnamentTypeAccess().getMordentEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='trill'
			{
				$current = grammarAccess.getOrnamentTypeAccess().getTrillEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getOrnamentTypeAccess().getTrillEnumLiteralDeclaration_6());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
