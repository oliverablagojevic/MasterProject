/*
 * generated by Xtext 2.21.0
 */
package org.xtext.example.mydsl.formatting2

import com.google.inject.Inject
import musicMetamodel.Composition
import musicMetamodel.Staff
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.mydsl.services.MusicDslGrammarAccess

class MusicDslFormatter extends AbstractFormatter2 {
	
	@Inject extension MusicDslGrammarAccess

	def dispatch void format(Composition composition, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (staff : composition.staff) {
			staff.format
		}
	}

	def dispatch void format(Staff staff, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		staff.clef.format
		staff.time.format
		for (staffElement : staff.elements) {
			staffElement.format
		}
		staff.key.format
	}
	
	// TODO: implement for Measure, Note
}
