// automatically generated by Xtext
grammar org.xtext.example.mydsl.MusicDsl with org.eclipse.xtext.common.Terminals

import "http://www.example.org/musicMetamodel" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Composition returns Composition:
	{Composition}
	'Composition' name=EString
	'['
		('author:' author=EString)?
		('instrument:' instrument=EString)?
		('tonality:' tonality=EString)?
		('soundTempo:' soundTempo=EInt)?
		staff+=Staff ( "," staff+=Staff)*
	']'
	;




StaffElement returns StaffElement:
	Measure | Rest | Repetition | Note;



EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;

Staff returns Staff:
	{Staff}
	'Staff' staffNumber=EInt
	'['
		'clef:' clef=Clef
		('key:' key=Key)?
		'time:' time=TimeSignature
		(elements+=StaffElement ( "," elements+=StaffElement)*)?
	']';

Clef returns Clef:
	{Clef}
		(type=ClefType)?
	;

TimeSignature returns TimeSignature:
		'beat' beat=EInt ',' 'beatType' beatType=EInt
	;

Key returns Key:
	fifths=EInt
	;

enum ClefType returns ClefType:
				violin = 'violin' | bass = 'bass';

Measure returns Measure:
	{Measure}
	'Measure' measureNumber=EInt 
	'begin'
		(repetition+=Repetition ( "," repetition+=Repetition)*  )?
		(rest+=Rest ( "," rest+=Rest)* )?
		(note+=Note ( "," note+=Note)* )?
	'end'
	;

Rest returns Rest:
	{Rest}
	'rest'
	
		(type=RestType)?
	;

Repetition returns Repetition:
	{Repetition}
	'repetition'
	
		(type=RepetitionType)?
	;

Note returns Note:
	{Note}
	'note' name=NoteName ':'
		('type' type=NoteType)?
		('duration' duration=EInt)? 
		('octave' octave=EInt)? 
		('voice' voice=EInt)? 
		('dynamic' dynamic=EString)? 
		('accidental' accidental=AccidentalType)? 
		('lyrics' lyrics=EString)? 
		(fermata?='fermata')? 
	    (dot?='dot')? 
	    (chord?='chord')?
		(notation+=Notation ( "," notation+=Notation)* )?
	;

enum RestType returns RestType:
				whole = 'whole' | half = 'half' | quarter = 'quarter' | eighth = 'eighth' | sixteenth = 'sixteenth' | thirtysecond = 'thirtysecond' | sixtyfourth = 'sixtyfourth';

enum RepetitionType returns RepetitionType:
				left = 'left' | right = 'right';

enum NoteName returns NoteName:
				C = 'C' | D = 'D' | E = 'E' | F = 'F' | G = 'G' | A = 'A' | B = 'B';

enum NoteType returns NoteType:
				whole = 'whole' | half = 'half' | quarter = 'quarter' | eighth = 'eighth' | sixteenth = 'sixteenth' | thirtysecond = 'thirtysecond' | sixtyfourth = 'sixtyfourth';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

enum AccidentalType returns AccidentalType:
				sharp = 'sharp' | flat = 'flat' | natural = 'natural';

Notation returns Notation:
	{Notation}
	'notation:'
		('articulation' articulation=ArticulationType)?
		('ornament' ornament=OrnamentType)?
		('slur' slur=SlurType)?
	;

enum SlurType returns SlurType:
				start = 'start' |stop = 'stop';
				
enum ArticulationType returns ArticulationType:
				detached = 'detached' | legato = 'legato' | staccato = 'staccato' | portato = 'portato' | tenuto = 'tenuto' | marcato = 'marcato';

enum OrnamentType returns OrnamentType:
				slide = 'slide' | glissando = 'glissando' | aciaccatura = 'aciaccatura' | appoggiatura = 'appoggiatura' | turn = 'turn' | mordent = 'mordent' | trill = 'trill';
