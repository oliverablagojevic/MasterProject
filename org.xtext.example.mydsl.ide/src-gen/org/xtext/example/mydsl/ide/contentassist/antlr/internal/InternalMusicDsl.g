/*
 * generated by Xtext 2.21.0
 */
grammar InternalMusicDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MusicDslGrammarAccess;

}
@parser::members {
	private MusicDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MusicDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleComposition
entryRuleComposition
:
{ before(grammarAccess.getCompositionRule()); }
	 ruleComposition
{ after(grammarAccess.getCompositionRule()); } 
	 EOF 
;

// Rule Composition
ruleComposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionAccess().getGroup()); }
		(rule__Composition__Group__0)
		{ after(grammarAccess.getCompositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStaffElement
entryRuleStaffElement
:
{ before(grammarAccess.getStaffElementRule()); }
	 ruleStaffElement
{ after(grammarAccess.getStaffElementRule()); } 
	 EOF 
;

// Rule StaffElement
ruleStaffElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStaffElementAccess().getAlternatives()); }
		(rule__StaffElement__Alternatives)
		{ after(grammarAccess.getStaffElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStaff
entryRuleStaff
:
{ before(grammarAccess.getStaffRule()); }
	 ruleStaff
{ after(grammarAccess.getStaffRule()); } 
	 EOF 
;

// Rule Staff
ruleStaff 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStaffAccess().getGroup()); }
		(rule__Staff__Group__0)
		{ after(grammarAccess.getStaffAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClef
entryRuleClef
:
{ before(grammarAccess.getClefRule()); }
	 ruleClef
{ after(grammarAccess.getClefRule()); } 
	 EOF 
;

// Rule Clef
ruleClef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClefAccess().getGroup()); }
		(rule__Clef__Group__0)
		{ after(grammarAccess.getClefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeSignature
entryRuleTimeSignature
:
{ before(grammarAccess.getTimeSignatureRule()); }
	 ruleTimeSignature
{ after(grammarAccess.getTimeSignatureRule()); } 
	 EOF 
;

// Rule TimeSignature
ruleTimeSignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeSignatureAccess().getGroup()); }
		(rule__TimeSignature__Group__0)
		{ after(grammarAccess.getTimeSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKey
entryRuleKey
:
{ before(grammarAccess.getKeyRule()); }
	 ruleKey
{ after(grammarAccess.getKeyRule()); } 
	 EOF 
;

// Rule Key
ruleKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyAccess().getFifthsAssignment()); }
		(rule__Key__FifthsAssignment)
		{ after(grammarAccess.getKeyAccess().getFifthsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMeasure
entryRuleMeasure
:
{ before(grammarAccess.getMeasureRule()); }
	 ruleMeasure
{ after(grammarAccess.getMeasureRule()); } 
	 EOF 
;

// Rule Measure
ruleMeasure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMeasureAccess().getGroup()); }
		(rule__Measure__Group__0)
		{ after(grammarAccess.getMeasureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRest
entryRuleRest
:
{ before(grammarAccess.getRestRule()); }
	 ruleRest
{ after(grammarAccess.getRestRule()); } 
	 EOF 
;

// Rule Rest
ruleRest 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRestAccess().getGroup()); }
		(rule__Rest__Group__0)
		{ after(grammarAccess.getRestAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepetition
entryRuleRepetition
:
{ before(grammarAccess.getRepetitionRule()); }
	 ruleRepetition
{ after(grammarAccess.getRepetitionRule()); } 
	 EOF 
;

// Rule Repetition
ruleRepetition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepetitionAccess().getGroup()); }
		(rule__Repetition__Group__0)
		{ after(grammarAccess.getRepetitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNote
entryRuleNote
:
{ before(grammarAccess.getNoteRule()); }
	 ruleNote
{ after(grammarAccess.getNoteRule()); } 
	 EOF 
;

// Rule Note
ruleNote 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNoteAccess().getGroup()); }
		(rule__Note__Group__0)
		{ after(grammarAccess.getNoteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotation
entryRuleNotation
:
{ before(grammarAccess.getNotationRule()); }
	 ruleNotation
{ after(grammarAccess.getNotationRule()); } 
	 EOF 
;

// Rule Notation
ruleNotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotationAccess().getGroup()); }
		(rule__Notation__Group__0)
		{ after(grammarAccess.getNotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ClefType
ruleClefType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClefTypeAccess().getAlternatives()); }
		(rule__ClefType__Alternatives)
		{ after(grammarAccess.getClefTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RestType
ruleRestType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestTypeAccess().getAlternatives()); }
		(rule__RestType__Alternatives)
		{ after(grammarAccess.getRestTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RepetitionType
ruleRepetitionType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepetitionTypeAccess().getAlternatives()); }
		(rule__RepetitionType__Alternatives)
		{ after(grammarAccess.getRepetitionTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NoteName
ruleNoteName
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteNameAccess().getAlternatives()); }
		(rule__NoteName__Alternatives)
		{ after(grammarAccess.getNoteNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NoteType
ruleNoteType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteTypeAccess().getAlternatives()); }
		(rule__NoteType__Alternatives)
		{ after(grammarAccess.getNoteTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AccidentalType
ruleAccidentalType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccidentalTypeAccess().getAlternatives()); }
		(rule__AccidentalType__Alternatives)
		{ after(grammarAccess.getAccidentalTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SlurType
ruleSlurType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSlurTypeAccess().getAlternatives()); }
		(rule__SlurType__Alternatives)
		{ after(grammarAccess.getSlurTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ArticulationType
ruleArticulationType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArticulationTypeAccess().getAlternatives()); }
		(rule__ArticulationType__Alternatives)
		{ after(grammarAccess.getArticulationTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule OrnamentType
ruleOrnamentType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getAlternatives()); }
		(rule__OrnamentType__Alternatives)
		{ after(grammarAccess.getOrnamentTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaffElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffElementAccess().getMeasureParserRuleCall_0()); }
		ruleMeasure
		{ after(grammarAccess.getStaffElementAccess().getMeasureParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStaffElementAccess().getRestParserRuleCall_1()); }
		ruleRest
		{ after(grammarAccess.getStaffElementAccess().getRestParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStaffElementAccess().getRepetitionParserRuleCall_2()); }
		ruleRepetition
		{ after(grammarAccess.getStaffElementAccess().getRepetitionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStaffElementAccess().getNoteParserRuleCall_3()); }
		ruleNote
		{ after(grammarAccess.getStaffElementAccess().getNoteParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClefType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClefTypeAccess().getViolinEnumLiteralDeclaration_0()); }
		('violin')
		{ after(grammarAccess.getClefTypeAccess().getViolinEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getClefTypeAccess().getBassEnumLiteralDeclaration_1()); }
		('bass')
		{ after(grammarAccess.getClefTypeAccess().getBassEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestTypeAccess().getWholeEnumLiteralDeclaration_0()); }
		('whole')
		{ after(grammarAccess.getRestTypeAccess().getWholeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRestTypeAccess().getHalfEnumLiteralDeclaration_1()); }
		('half')
		{ after(grammarAccess.getRestTypeAccess().getHalfEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRestTypeAccess().getQuarterEnumLiteralDeclaration_2()); }
		('quarter')
		{ after(grammarAccess.getRestTypeAccess().getQuarterEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRestTypeAccess().getEighthEnumLiteralDeclaration_3()); }
		('eighth')
		{ after(grammarAccess.getRestTypeAccess().getEighthEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getRestTypeAccess().getSixteenthEnumLiteralDeclaration_4()); }
		('sixteenth')
		{ after(grammarAccess.getRestTypeAccess().getSixteenthEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getRestTypeAccess().getThirtysecondEnumLiteralDeclaration_5()); }
		('thirtysecond')
		{ after(grammarAccess.getRestTypeAccess().getThirtysecondEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getRestTypeAccess().getSixtyfourthEnumLiteralDeclaration_6()); }
		('sixtyfourth')
		{ after(grammarAccess.getRestTypeAccess().getSixtyfourthEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepetitionType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepetitionTypeAccess().getLeftEnumLiteralDeclaration_0()); }
		('left')
		{ after(grammarAccess.getRepetitionTypeAccess().getLeftEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRepetitionTypeAccess().getRightEnumLiteralDeclaration_1()); }
		('right')
		{ after(grammarAccess.getRepetitionTypeAccess().getRightEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoteName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteNameAccess().getCEnumLiteralDeclaration_0()); }
		('C')
		{ after(grammarAccess.getNoteNameAccess().getCEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getDEnumLiteralDeclaration_1()); }
		('D')
		{ after(grammarAccess.getNoteNameAccess().getDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getEEnumLiteralDeclaration_2()); }
		('E')
		{ after(grammarAccess.getNoteNameAccess().getEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getFEnumLiteralDeclaration_3()); }
		('F')
		{ after(grammarAccess.getNoteNameAccess().getFEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getGEnumLiteralDeclaration_4()); }
		('G')
		{ after(grammarAccess.getNoteNameAccess().getGEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getAEnumLiteralDeclaration_5()); }
		('A')
		{ after(grammarAccess.getNoteNameAccess().getAEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getBEnumLiteralDeclaration_6()); }
		('B')
		{ after(grammarAccess.getNoteNameAccess().getBEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoteType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteTypeAccess().getWholeEnumLiteralDeclaration_0()); }
		('whole')
		{ after(grammarAccess.getNoteTypeAccess().getWholeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNoteTypeAccess().getHalfEnumLiteralDeclaration_1()); }
		('half')
		{ after(grammarAccess.getNoteTypeAccess().getHalfEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getNoteTypeAccess().getQuarterEnumLiteralDeclaration_2()); }
		('quarter')
		{ after(grammarAccess.getNoteTypeAccess().getQuarterEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getNoteTypeAccess().getEighthEnumLiteralDeclaration_3()); }
		('eighth')
		{ after(grammarAccess.getNoteTypeAccess().getEighthEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getNoteTypeAccess().getSixteenthEnumLiteralDeclaration_4()); }
		('sixteenth')
		{ after(grammarAccess.getNoteTypeAccess().getSixteenthEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getNoteTypeAccess().getThirtysecondEnumLiteralDeclaration_5()); }
		('thirtysecond')
		{ after(grammarAccess.getNoteTypeAccess().getThirtysecondEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getNoteTypeAccess().getSixtyfourthEnumLiteralDeclaration_6()); }
		('sixtyfourth')
		{ after(grammarAccess.getNoteTypeAccess().getSixtyfourthEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccidentalType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccidentalTypeAccess().getSharpEnumLiteralDeclaration_0()); }
		('sharp')
		{ after(grammarAccess.getAccidentalTypeAccess().getSharpEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAccidentalTypeAccess().getFlatEnumLiteralDeclaration_1()); }
		('flat')
		{ after(grammarAccess.getAccidentalTypeAccess().getFlatEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAccidentalTypeAccess().getNaturalEnumLiteralDeclaration_2()); }
		('natural')
		{ after(grammarAccess.getAccidentalTypeAccess().getNaturalEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SlurType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSlurTypeAccess().getStartEnumLiteralDeclaration_0()); }
		('start')
		{ after(grammarAccess.getSlurTypeAccess().getStartEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSlurTypeAccess().getStopEnumLiteralDeclaration_1()); }
		('stop')
		{ after(grammarAccess.getSlurTypeAccess().getStopEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArticulationType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArticulationTypeAccess().getDetachedEnumLiteralDeclaration_0()); }
		('detached')
		{ after(grammarAccess.getArticulationTypeAccess().getDetachedEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getArticulationTypeAccess().getLegatoEnumLiteralDeclaration_1()); }
		('legato')
		{ after(grammarAccess.getArticulationTypeAccess().getLegatoEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getArticulationTypeAccess().getStaccatoEnumLiteralDeclaration_2()); }
		('staccato')
		{ after(grammarAccess.getArticulationTypeAccess().getStaccatoEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getArticulationTypeAccess().getPortatoEnumLiteralDeclaration_3()); }
		('portato')
		{ after(grammarAccess.getArticulationTypeAccess().getPortatoEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getArticulationTypeAccess().getTenutoEnumLiteralDeclaration_4()); }
		('tenuto')
		{ after(grammarAccess.getArticulationTypeAccess().getTenutoEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getArticulationTypeAccess().getMarcatoEnumLiteralDeclaration_5()); }
		('marcato')
		{ after(grammarAccess.getArticulationTypeAccess().getMarcatoEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrnamentType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getSlideEnumLiteralDeclaration_0()); }
		('slide')
		{ after(grammarAccess.getOrnamentTypeAccess().getSlideEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getGlissandoEnumLiteralDeclaration_1()); }
		('glissando')
		{ after(grammarAccess.getOrnamentTypeAccess().getGlissandoEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getAciaccaturaEnumLiteralDeclaration_2()); }
		('aciaccatura')
		{ after(grammarAccess.getOrnamentTypeAccess().getAciaccaturaEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getAppoggiaturaEnumLiteralDeclaration_3()); }
		('appoggiatura')
		{ after(grammarAccess.getOrnamentTypeAccess().getAppoggiaturaEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getTurnEnumLiteralDeclaration_4()); }
		('turn')
		{ after(grammarAccess.getOrnamentTypeAccess().getTurnEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getMordentEnumLiteralDeclaration_5()); }
		('mordent')
		{ after(grammarAccess.getOrnamentTypeAccess().getMordentEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getOrnamentTypeAccess().getTrillEnumLiteralDeclaration_6()); }
		('trill')
		{ after(grammarAccess.getOrnamentTypeAccess().getTrillEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__0__Impl
	rule__Composition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getCompositionAction_0()); }
	()
	{ after(grammarAccess.getCompositionAccess().getCompositionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__1__Impl
	rule__Composition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getCompositionKeyword_1()); }
	'Composition'
	{ after(grammarAccess.getCompositionAccess().getCompositionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__2__Impl
	rule__Composition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getNameAssignment_2()); }
	(rule__Composition__NameAssignment_2)
	{ after(grammarAccess.getCompositionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__3__Impl
	rule__Composition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getLeftSquareBracketKeyword_3()); }
	'['
	{ after(grammarAccess.getCompositionAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__4__Impl
	rule__Composition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_4()); }
	(rule__Composition__Group_4__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__5__Impl
	rule__Composition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_5()); }
	(rule__Composition__Group_5__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__6__Impl
	rule__Composition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_6()); }
	(rule__Composition__Group_6__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__7__Impl
	rule__Composition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_7()); }
	(rule__Composition__Group_7__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__8__Impl
	rule__Composition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getStaffAssignment_8()); }
	(rule__Composition__StaffAssignment_8)
	{ after(grammarAccess.getCompositionAccess().getStaffAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__9__Impl
	rule__Composition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_9()); }
	(rule__Composition__Group_9__0)*
	{ after(grammarAccess.getCompositionAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getRightSquareBracketKeyword_10()); }
	']'
	{ after(grammarAccess.getCompositionAccess().getRightSquareBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_4__0__Impl
	rule__Composition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getAuthorKeyword_4_0()); }
	'author:'
	{ after(grammarAccess.getCompositionAccess().getAuthorKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getAuthorAssignment_4_1()); }
	(rule__Composition__AuthorAssignment_4_1)
	{ after(grammarAccess.getCompositionAccess().getAuthorAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_5__0__Impl
	rule__Composition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getInstrumentKeyword_5_0()); }
	'instrument:'
	{ after(grammarAccess.getCompositionAccess().getInstrumentKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getInstrumentAssignment_5_1()); }
	(rule__Composition__InstrumentAssignment_5_1)
	{ after(grammarAccess.getCompositionAccess().getInstrumentAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_6__0__Impl
	rule__Composition__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getTonalityKeyword_6_0()); }
	'tonality:'
	{ after(grammarAccess.getCompositionAccess().getTonalityKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getTonalityAssignment_6_1()); }
	(rule__Composition__TonalityAssignment_6_1)
	{ after(grammarAccess.getCompositionAccess().getTonalityAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_7__0__Impl
	rule__Composition__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getSoundTempoKeyword_7_0()); }
	'soundTempo:'
	{ after(grammarAccess.getCompositionAccess().getSoundTempoKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getSoundTempoAssignment_7_1()); }
	(rule__Composition__SoundTempoAssignment_7_1)
	{ after(grammarAccess.getCompositionAccess().getSoundTempoAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_9__0__Impl
	rule__Composition__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getCommaKeyword_9_0()); }
	','
	{ after(grammarAccess.getCompositionAccess().getCommaKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getStaffAssignment_9_1()); }
	(rule__Composition__StaffAssignment_9_1)
	{ after(grammarAccess.getCompositionAccess().getStaffAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Staff__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__0__Impl
	rule__Staff__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getStaffAction_0()); }
	()
	{ after(grammarAccess.getStaffAccess().getStaffAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__1__Impl
	rule__Staff__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getStaffKeyword_1()); }
	'Staff'
	{ after(grammarAccess.getStaffAccess().getStaffKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__2__Impl
	rule__Staff__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getStaffNumberAssignment_2()); }
	(rule__Staff__StaffNumberAssignment_2)
	{ after(grammarAccess.getStaffAccess().getStaffNumberAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__3__Impl
	rule__Staff__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getLeftSquareBracketKeyword_3()); }
	'['
	{ after(grammarAccess.getStaffAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__4__Impl
	rule__Staff__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getClefKeyword_4()); }
	'clef:'
	{ after(grammarAccess.getStaffAccess().getClefKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__5__Impl
	rule__Staff__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getClefAssignment_5()); }
	(rule__Staff__ClefAssignment_5)
	{ after(grammarAccess.getStaffAccess().getClefAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__6__Impl
	rule__Staff__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getGroup_6()); }
	(rule__Staff__Group_6__0)?
	{ after(grammarAccess.getStaffAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__7__Impl
	rule__Staff__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getTimeKeyword_7()); }
	'time:'
	{ after(grammarAccess.getStaffAccess().getTimeKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__8__Impl
	rule__Staff__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getTimeAssignment_8()); }
	(rule__Staff__TimeAssignment_8)
	{ after(grammarAccess.getStaffAccess().getTimeAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__9__Impl
	rule__Staff__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getGroup_9()); }
	(rule__Staff__Group_9__0)?
	{ after(grammarAccess.getStaffAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getRightSquareBracketKeyword_10()); }
	']'
	{ after(grammarAccess.getStaffAccess().getRightSquareBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Staff__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group_6__0__Impl
	rule__Staff__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getKeyKeyword_6_0()); }
	'key:'
	{ after(grammarAccess.getStaffAccess().getKeyKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getKeyAssignment_6_1()); }
	(rule__Staff__KeyAssignment_6_1)
	{ after(grammarAccess.getStaffAccess().getKeyAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Staff__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group_9__0__Impl
	rule__Staff__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getElementsAssignment_9_0()); }
	(rule__Staff__ElementsAssignment_9_0)
	{ after(grammarAccess.getStaffAccess().getElementsAssignment_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getGroup_9_1()); }
	(rule__Staff__Group_9_1__0)*
	{ after(grammarAccess.getStaffAccess().getGroup_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Staff__Group_9_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group_9_1__0__Impl
	rule__Staff__Group_9_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group_9_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getCommaKeyword_9_1_0()); }
	','
	{ after(grammarAccess.getStaffAccess().getCommaKeyword_9_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group_9_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group_9_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group_9_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getElementsAssignment_9_1_1()); }
	(rule__Staff__ElementsAssignment_9_1_1)
	{ after(grammarAccess.getStaffAccess().getElementsAssignment_9_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Clef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clef__Group__0__Impl
	rule__Clef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClefAccess().getClefAction_0()); }
	()
	{ after(grammarAccess.getClefAccess().getClefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClefAccess().getTypeAssignment_1()); }
	(rule__Clef__TypeAssignment_1)?
	{ after(grammarAccess.getClefAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSignature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSignature__Group__0__Impl
	rule__TimeSignature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSignatureAccess().getBeatKeyword_0()); }
	'beat'
	{ after(grammarAccess.getTimeSignatureAccess().getBeatKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSignature__Group__1__Impl
	rule__TimeSignature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSignatureAccess().getBeatAssignment_1()); }
	(rule__TimeSignature__BeatAssignment_1)
	{ after(grammarAccess.getTimeSignatureAccess().getBeatAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSignature__Group__2__Impl
	rule__TimeSignature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSignatureAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getTimeSignatureAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSignature__Group__3__Impl
	rule__TimeSignature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSignatureAccess().getBeatTypeKeyword_3()); }
	'beatType'
	{ after(grammarAccess.getTimeSignatureAccess().getBeatTypeKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSignature__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSignatureAccess().getBeatTypeAssignment_4()); }
	(rule__TimeSignature__BeatTypeAssignment_4)
	{ after(grammarAccess.getTimeSignatureAccess().getBeatTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Measure__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group__0__Impl
	rule__Measure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getMeasureAction_0()); }
	()
	{ after(grammarAccess.getMeasureAccess().getMeasureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group__1__Impl
	rule__Measure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getMeasureKeyword_1()); }
	'Measure'
	{ after(grammarAccess.getMeasureAccess().getMeasureKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group__2__Impl
	rule__Measure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getMeasureNumberAssignment_2()); }
	(rule__Measure__MeasureNumberAssignment_2)
	{ after(grammarAccess.getMeasureAccess().getMeasureNumberAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group__3__Impl
	rule__Measure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getBeginKeyword_3()); }
	'begin'
	{ after(grammarAccess.getMeasureAccess().getBeginKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group__4__Impl
	rule__Measure__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getGroup_4()); }
	(rule__Measure__Group_4__0)?
	{ after(grammarAccess.getMeasureAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group__5__Impl
	rule__Measure__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getGroup_5()); }
	(rule__Measure__Group_5__0)?
	{ after(grammarAccess.getMeasureAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group__6__Impl
	rule__Measure__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getGroup_6()); }
	(rule__Measure__Group_6__0)?
	{ after(grammarAccess.getMeasureAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getEndKeyword_7()); }
	'end'
	{ after(grammarAccess.getMeasureAccess().getEndKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Measure__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group_4__0__Impl
	rule__Measure__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getRepetitionAssignment_4_0()); }
	(rule__Measure__RepetitionAssignment_4_0)
	{ after(grammarAccess.getMeasureAccess().getRepetitionAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getGroup_4_1()); }
	(rule__Measure__Group_4_1__0)*
	{ after(grammarAccess.getMeasureAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Measure__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group_4_1__0__Impl
	rule__Measure__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getMeasureAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getRepetitionAssignment_4_1_1()); }
	(rule__Measure__RepetitionAssignment_4_1_1)
	{ after(grammarAccess.getMeasureAccess().getRepetitionAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Measure__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group_5__0__Impl
	rule__Measure__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getRestAssignment_5_0()); }
	(rule__Measure__RestAssignment_5_0)
	{ after(grammarAccess.getMeasureAccess().getRestAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getGroup_5_1()); }
	(rule__Measure__Group_5_1__0)*
	{ after(grammarAccess.getMeasureAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Measure__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group_5_1__0__Impl
	rule__Measure__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getCommaKeyword_5_1_0()); }
	','
	{ after(grammarAccess.getMeasureAccess().getCommaKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getRestAssignment_5_1_1()); }
	(rule__Measure__RestAssignment_5_1_1)
	{ after(grammarAccess.getMeasureAccess().getRestAssignment_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Measure__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group_6__0__Impl
	rule__Measure__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getNoteAssignment_6_0()); }
	(rule__Measure__NoteAssignment_6_0)
	{ after(grammarAccess.getMeasureAccess().getNoteAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getGroup_6_1()); }
	(rule__Measure__Group_6_1__0)*
	{ after(grammarAccess.getMeasureAccess().getGroup_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Measure__Group_6_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group_6_1__0__Impl
	rule__Measure__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_6_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getCommaKeyword_6_1_0()); }
	','
	{ after(grammarAccess.getMeasureAccess().getCommaKeyword_6_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_6_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Measure__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group_6_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeasureAccess().getNoteAssignment_6_1_1()); }
	(rule__Measure__NoteAssignment_6_1_1)
	{ after(grammarAccess.getMeasureAccess().getNoteAssignment_6_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rest__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rest__Group__0__Impl
	rule__Rest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rest__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestAccess().getRestAction_0()); }
	()
	{ after(grammarAccess.getRestAccess().getRestAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rest__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rest__Group__1__Impl
	rule__Rest__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rest__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestAccess().getRestKeyword_1()); }
	'rest'
	{ after(grammarAccess.getRestAccess().getRestKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rest__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rest__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rest__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestAccess().getTypeAssignment_2()); }
	(rule__Rest__TypeAssignment_2)?
	{ after(grammarAccess.getRestAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Repetition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repetition__Group__0__Impl
	rule__Repetition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Repetition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetitionAccess().getRepetitionAction_0()); }
	()
	{ after(grammarAccess.getRepetitionAccess().getRepetitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repetition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repetition__Group__1__Impl
	rule__Repetition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Repetition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetitionAccess().getRepetitionKeyword_1()); }
	'repetition'
	{ after(grammarAccess.getRepetitionAccess().getRepetitionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repetition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repetition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Repetition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepetitionAccess().getTypeAssignment_2()); }
	(rule__Repetition__TypeAssignment_2)?
	{ after(grammarAccess.getRepetitionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__0__Impl
	rule__Note__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getNoteAction_0()); }
	()
	{ after(grammarAccess.getNoteAccess().getNoteAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__1__Impl
	rule__Note__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getNoteKeyword_1()); }
	'note'
	{ after(grammarAccess.getNoteAccess().getNoteKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__2__Impl
	rule__Note__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getNameAssignment_2()); }
	(rule__Note__NameAssignment_2)
	{ after(grammarAccess.getNoteAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__3__Impl
	rule__Note__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getNoteAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__4__Impl
	rule__Note__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getGroup_4()); }
	(rule__Note__Group_4__0)?
	{ after(grammarAccess.getNoteAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__5__Impl
	rule__Note__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getGroup_5()); }
	(rule__Note__Group_5__0)?
	{ after(grammarAccess.getNoteAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__6__Impl
	rule__Note__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getGroup_6()); }
	(rule__Note__Group_6__0)?
	{ after(grammarAccess.getNoteAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__7__Impl
	rule__Note__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getGroup_7()); }
	(rule__Note__Group_7__0)?
	{ after(grammarAccess.getNoteAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__8__Impl
	rule__Note__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getGroup_8()); }
	(rule__Note__Group_8__0)?
	{ after(grammarAccess.getNoteAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__9__Impl
	rule__Note__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getGroup_9()); }
	(rule__Note__Group_9__0)?
	{ after(grammarAccess.getNoteAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__10__Impl
	rule__Note__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getGroup_10()); }
	(rule__Note__Group_10__0)?
	{ after(grammarAccess.getNoteAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__11__Impl
	rule__Note__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getFermataAssignment_11()); }
	(rule__Note__FermataAssignment_11)?
	{ after(grammarAccess.getNoteAccess().getFermataAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__12__Impl
	rule__Note__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getDotAssignment_12()); }
	(rule__Note__DotAssignment_12)?
	{ after(grammarAccess.getNoteAccess().getDotAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__13__Impl
	rule__Note__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getChordAssignment_13()); }
	(rule__Note__ChordAssignment_13)?
	{ after(grammarAccess.getNoteAccess().getChordAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getGroup_14()); }
	(rule__Note__Group_14__0)?
	{ after(grammarAccess.getNoteAccess().getGroup_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_4__0__Impl
	rule__Note__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getTypeKeyword_4_0()); }
	'type'
	{ after(grammarAccess.getNoteAccess().getTypeKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getTypeAssignment_4_1()); }
	(rule__Note__TypeAssignment_4_1)
	{ after(grammarAccess.getNoteAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_5__0__Impl
	rule__Note__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getDurationKeyword_5_0()); }
	'duration'
	{ after(grammarAccess.getNoteAccess().getDurationKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getDurationAssignment_5_1()); }
	(rule__Note__DurationAssignment_5_1)
	{ after(grammarAccess.getNoteAccess().getDurationAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_6__0__Impl
	rule__Note__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getOctaveKeyword_6_0()); }
	'octave'
	{ after(grammarAccess.getNoteAccess().getOctaveKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getOctaveAssignment_6_1()); }
	(rule__Note__OctaveAssignment_6_1)
	{ after(grammarAccess.getNoteAccess().getOctaveAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_7__0__Impl
	rule__Note__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getVoiceKeyword_7_0()); }
	'voice'
	{ after(grammarAccess.getNoteAccess().getVoiceKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getVoiceAssignment_7_1()); }
	(rule__Note__VoiceAssignment_7_1)
	{ after(grammarAccess.getNoteAccess().getVoiceAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_8__0__Impl
	rule__Note__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getDynamicKeyword_8_0()); }
	'dynamic'
	{ after(grammarAccess.getNoteAccess().getDynamicKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getDynamicAssignment_8_1()); }
	(rule__Note__DynamicAssignment_8_1)
	{ after(grammarAccess.getNoteAccess().getDynamicAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_9__0__Impl
	rule__Note__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getAccidentalKeyword_9_0()); }
	'accidental'
	{ after(grammarAccess.getNoteAccess().getAccidentalKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getAccidentalAssignment_9_1()); }
	(rule__Note__AccidentalAssignment_9_1)
	{ after(grammarAccess.getNoteAccess().getAccidentalAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_10__0__Impl
	rule__Note__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getLyricsKeyword_10_0()); }
	'lyrics'
	{ after(grammarAccess.getNoteAccess().getLyricsKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getLyricsAssignment_10_1()); }
	(rule__Note__LyricsAssignment_10_1)
	{ after(grammarAccess.getNoteAccess().getLyricsAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_14__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_14__0__Impl
	rule__Note__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_14__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getNotationAssignment_14_0()); }
	(rule__Note__NotationAssignment_14_0)
	{ after(grammarAccess.getNoteAccess().getNotationAssignment_14_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_14__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_14__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_14__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getGroup_14_1()); }
	(rule__Note__Group_14_1__0)*
	{ after(grammarAccess.getNoteAccess().getGroup_14_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_14_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_14_1__0__Impl
	rule__Note__Group_14_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_14_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getCommaKeyword_14_1_0()); }
	','
	{ after(grammarAccess.getNoteAccess().getCommaKeyword_14_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_14_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group_14_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_14_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getNotationAssignment_14_1_1()); }
	(rule__Note__NotationAssignment_14_1_1)
	{ after(grammarAccess.getNoteAccess().getNotationAssignment_14_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Notation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Notation__Group__0__Impl
	rule__Notation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotationAccess().getNotationAction_0()); }
	()
	{ after(grammarAccess.getNotationAccess().getNotationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Notation__Group__1__Impl
	rule__Notation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotationAccess().getNotationKeyword_1()); }
	'notation:'
	{ after(grammarAccess.getNotationAccess().getNotationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Notation__Group__2__Impl
	rule__Notation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotationAccess().getGroup_2()); }
	(rule__Notation__Group_2__0)?
	{ after(grammarAccess.getNotationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Notation__Group__3__Impl
	rule__Notation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotationAccess().getGroup_3()); }
	(rule__Notation__Group_3__0)?
	{ after(grammarAccess.getNotationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Notation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotationAccess().getGroup_4()); }
	(rule__Notation__Group_4__0)?
	{ after(grammarAccess.getNotationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Notation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Notation__Group_2__0__Impl
	rule__Notation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotationAccess().getArticulationKeyword_2_0()); }
	'articulation'
	{ after(grammarAccess.getNotationAccess().getArticulationKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Notation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotationAccess().getArticulationAssignment_2_1()); }
	(rule__Notation__ArticulationAssignment_2_1)
	{ after(grammarAccess.getNotationAccess().getArticulationAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Notation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Notation__Group_3__0__Impl
	rule__Notation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotationAccess().getOrnamentKeyword_3_0()); }
	'ornament'
	{ after(grammarAccess.getNotationAccess().getOrnamentKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Notation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotationAccess().getOrnamentAssignment_3_1()); }
	(rule__Notation__OrnamentAssignment_3_1)
	{ after(grammarAccess.getNotationAccess().getOrnamentAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Notation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Notation__Group_4__0__Impl
	rule__Notation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotationAccess().getSlurKeyword_4_0()); }
	'slur'
	{ after(grammarAccess.getNotationAccess().getSlurKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Notation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotationAccess().getSlurAssignment_4_1()); }
	(rule__Notation__SlurAssignment_4_1)
	{ after(grammarAccess.getNotationAccess().getSlurAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getCompositionAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__AuthorAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getAuthorEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getCompositionAccess().getAuthorEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__InstrumentAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getInstrumentEStringParserRuleCall_5_1_0()); }
		ruleEString
		{ after(grammarAccess.getCompositionAccess().getInstrumentEStringParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__TonalityAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getTonalityEStringParserRuleCall_6_1_0()); }
		ruleEString
		{ after(grammarAccess.getCompositionAccess().getTonalityEStringParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__SoundTempoAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getSoundTempoEIntParserRuleCall_7_1_0()); }
		ruleEInt
		{ after(grammarAccess.getCompositionAccess().getSoundTempoEIntParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__StaffAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getStaffStaffParserRuleCall_8_0()); }
		ruleStaff
		{ after(grammarAccess.getCompositionAccess().getStaffStaffParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__StaffAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getStaffStaffParserRuleCall_9_1_0()); }
		ruleStaff
		{ after(grammarAccess.getCompositionAccess().getStaffStaffParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__StaffNumberAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getStaffNumberEIntParserRuleCall_2_0()); }
		ruleEInt
		{ after(grammarAccess.getStaffAccess().getStaffNumberEIntParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__ClefAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getClefClefParserRuleCall_5_0()); }
		ruleClef
		{ after(grammarAccess.getStaffAccess().getClefClefParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__KeyAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getKeyKeyParserRuleCall_6_1_0()); }
		ruleKey
		{ after(grammarAccess.getStaffAccess().getKeyKeyParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__TimeAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getTimeTimeSignatureParserRuleCall_8_0()); }
		ruleTimeSignature
		{ after(grammarAccess.getStaffAccess().getTimeTimeSignatureParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__ElementsAssignment_9_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getElementsStaffElementParserRuleCall_9_0_0()); }
		ruleStaffElement
		{ after(grammarAccess.getStaffAccess().getElementsStaffElementParserRuleCall_9_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__ElementsAssignment_9_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getElementsStaffElementParserRuleCall_9_1_1_0()); }
		ruleStaffElement
		{ after(grammarAccess.getStaffAccess().getElementsStaffElementParserRuleCall_9_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clef__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClefAccess().getTypeClefTypeEnumRuleCall_1_0()); }
		ruleClefType
		{ after(grammarAccess.getClefAccess().getTypeClefTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__BeatAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeSignatureAccess().getBeatEIntParserRuleCall_1_0()); }
		ruleEInt
		{ after(grammarAccess.getTimeSignatureAccess().getBeatEIntParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSignature__BeatTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeSignatureAccess().getBeatTypeEIntParserRuleCall_4_0()); }
		ruleEInt
		{ after(grammarAccess.getTimeSignatureAccess().getBeatTypeEIntParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__FifthsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getFifthsEIntParserRuleCall_0()); }
		ruleEInt
		{ after(grammarAccess.getKeyAccess().getFifthsEIntParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__MeasureNumberAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeasureAccess().getMeasureNumberEIntParserRuleCall_2_0()); }
		ruleEInt
		{ after(grammarAccess.getMeasureAccess().getMeasureNumberEIntParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__RepetitionAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeasureAccess().getRepetitionRepetitionParserRuleCall_4_0_0()); }
		ruleRepetition
		{ after(grammarAccess.getMeasureAccess().getRepetitionRepetitionParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__RepetitionAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeasureAccess().getRepetitionRepetitionParserRuleCall_4_1_1_0()); }
		ruleRepetition
		{ after(grammarAccess.getMeasureAccess().getRepetitionRepetitionParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__RestAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeasureAccess().getRestRestParserRuleCall_5_0_0()); }
		ruleRest
		{ after(grammarAccess.getMeasureAccess().getRestRestParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__RestAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeasureAccess().getRestRestParserRuleCall_5_1_1_0()); }
		ruleRest
		{ after(grammarAccess.getMeasureAccess().getRestRestParserRuleCall_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__NoteAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeasureAccess().getNoteNoteParserRuleCall_6_0_0()); }
		ruleNote
		{ after(grammarAccess.getMeasureAccess().getNoteNoteParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__NoteAssignment_6_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeasureAccess().getNoteNoteParserRuleCall_6_1_1_0()); }
		ruleNote
		{ after(grammarAccess.getMeasureAccess().getNoteNoteParserRuleCall_6_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rest__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestAccess().getTypeRestTypeEnumRuleCall_2_0()); }
		ruleRestType
		{ after(grammarAccess.getRestAccess().getTypeRestTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repetition__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepetitionAccess().getTypeRepetitionTypeEnumRuleCall_2_0()); }
		ruleRepetitionType
		{ after(grammarAccess.getRepetitionAccess().getTypeRepetitionTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getNameNoteNameEnumRuleCall_2_0()); }
		ruleNoteName
		{ after(grammarAccess.getNoteAccess().getNameNoteNameEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getTypeNoteTypeEnumRuleCall_4_1_0()); }
		ruleNoteType
		{ after(grammarAccess.getNoteAccess().getTypeNoteTypeEnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__DurationAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getDurationEIntParserRuleCall_5_1_0()); }
		ruleEInt
		{ after(grammarAccess.getNoteAccess().getDurationEIntParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__OctaveAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getOctaveEIntParserRuleCall_6_1_0()); }
		ruleEInt
		{ after(grammarAccess.getNoteAccess().getOctaveEIntParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__VoiceAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getVoiceEIntParserRuleCall_7_1_0()); }
		ruleEInt
		{ after(grammarAccess.getNoteAccess().getVoiceEIntParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__DynamicAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getDynamicEStringParserRuleCall_8_1_0()); }
		ruleEString
		{ after(grammarAccess.getNoteAccess().getDynamicEStringParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__AccidentalAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getAccidentalAccidentalTypeEnumRuleCall_9_1_0()); }
		ruleAccidentalType
		{ after(grammarAccess.getNoteAccess().getAccidentalAccidentalTypeEnumRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__LyricsAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getLyricsEStringParserRuleCall_10_1_0()); }
		ruleEString
		{ after(grammarAccess.getNoteAccess().getLyricsEStringParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__FermataAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getFermataFermataKeyword_11_0()); }
		(
			{ before(grammarAccess.getNoteAccess().getFermataFermataKeyword_11_0()); }
			'fermata'
			{ after(grammarAccess.getNoteAccess().getFermataFermataKeyword_11_0()); }
		)
		{ after(grammarAccess.getNoteAccess().getFermataFermataKeyword_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__DotAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getDotDotKeyword_12_0()); }
		(
			{ before(grammarAccess.getNoteAccess().getDotDotKeyword_12_0()); }
			'dot'
			{ after(grammarAccess.getNoteAccess().getDotDotKeyword_12_0()); }
		)
		{ after(grammarAccess.getNoteAccess().getDotDotKeyword_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__ChordAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getChordChordKeyword_13_0()); }
		(
			{ before(grammarAccess.getNoteAccess().getChordChordKeyword_13_0()); }
			'chord'
			{ after(grammarAccess.getNoteAccess().getChordChordKeyword_13_0()); }
		)
		{ after(grammarAccess.getNoteAccess().getChordChordKeyword_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__NotationAssignment_14_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getNotationNotationParserRuleCall_14_0_0()); }
		ruleNotation
		{ after(grammarAccess.getNoteAccess().getNotationNotationParserRuleCall_14_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__NotationAssignment_14_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getNotationNotationParserRuleCall_14_1_1_0()); }
		ruleNotation
		{ after(grammarAccess.getNoteAccess().getNotationNotationParserRuleCall_14_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__ArticulationAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotationAccess().getArticulationArticulationTypeEnumRuleCall_2_1_0()); }
		ruleArticulationType
		{ after(grammarAccess.getNotationAccess().getArticulationArticulationTypeEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__OrnamentAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotationAccess().getOrnamentOrnamentTypeEnumRuleCall_3_1_0()); }
		ruleOrnamentType
		{ after(grammarAccess.getNotationAccess().getOrnamentOrnamentTypeEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__SlurAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotationAccess().getSlurSlurTypeEnumRuleCall_4_1_0()); }
		ruleSlurType
		{ after(grammarAccess.getNotationAccess().getSlurSlurTypeEnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
